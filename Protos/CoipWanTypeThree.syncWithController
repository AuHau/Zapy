   def syncWithController(self, ap, cp1, cp2):
      """
         It occurs to me that making the arguments to this routine be "AppProfile, From, To" might simplify this
	 thing a lot...

         If the CoipWanTypeOne described by the config file exists, synchronize the data structure to the controller
	 If it doesn't exist, create it.

	 ToDo: Doesn't Handle multiple ranges for From / To components
      """
      
      self._cfg['appProfileId'] = ap.get('appProfileId')

      #
      # Check to see if this CoipWan already exists
      #
      cwExists = False

      info = ap.AppProfile_listCoipWans()

      if len(info['data']) > 0:
         for i in range(0, len(info['data'])):
	    # print ">>>", info['data'][i]['coipWanName'], "<->", self._cfg['coipWanName']
	    if info['data'][i]['coipWanName'] == self._cfg['coipWanName']:
	       #
	       # CoipWan Exists
	       #
	       print "   INFO: Found and Existing CoIP Wan>", self._cfg['coipWanName']

	       for key, val in info['data'][i].items():
		  # print ">>>", key, "==", val
		  self._cfg[key] = val
	       
	       cwExists = True
	       break

      if not cwExists:
         # print "Adding a New '{}' CoipWan to {}".format(self._cfg['coipWanType'], ap.get('appProfileName'))

	 #
	 # Prepare Common API Command Bits
	 #

	 cmd = {
	    'cmd':'$AppProfile.addCoipWanTypeThree',
	    'args':{
	       'appProfileId': self._cfg['appProfileId'],
	       'coipWanName': self._cfg['coipWanName'],
	       'direction': self._cfg['direction'],
	    }
	 }

	 #
	 # TypeThree
	 #
	 cmps = {
	    'fromEdgeGateway': cp1.get('fromEdgeGateway'),
	    'toEdgeGateway': cp2.get('toEdgeGateway')
	 }

	 #
	 # Update the endServerIds
	 #
	 cmps['fromEdgeGateway']['endServerId'] = cp1.get('endServerId')
	 cmps['toEdgeGateway']['endServerId']   = cp2.get('endServerId')
	 
	 # print ">>> Cp1", cmps['fromEdgeGateway']['endServerId']
	 # print ">>> Cp2", cmps['toEdgeGateway']['endServerId']

	 #
	 # Make it so
	 #
	 cmd['args'].update(cmps)

	 info = self.makeZapyRequest(json.dumps(cmd))

	 # print info

	 if info['status'] == 'Ok':
	    self._cfg['coipWanId'] = info['data']['coipWanId']

	 return info

      return cwExists

   def syncWithController(self, ap, cp1, cp2):
      """
         If the CoipLan described by the config file exists, synchronize the data structure to the controller
	 If it doesn't exist, create it.
	 
	 Caveat: There isn't an "AppProfile.listCoipLan" function in the API

	 Thus this route will simply try to create the CoipLan and will return 'CoipLanAlreadyExists'

	 ToDo: InLineDevices
      """

      # print "Adding a New CoipLan to", ap.get('appProfileName')
      
      self._cfg['appProfileId'] = ap.get('appProfileId')

      #
      # ToDo: - When IP Components are Added, this will require some additional logic before we ask for an Id
      #
      # Allowed CoIPLan Connections Component Id Keys::
      #    ServerGroup -> 'serverGroupId'
      #    IPComponent -> <Undefined>Id
      #

      cp1Id = cp1.getId()
      cp2Id = cp2.getId()

      if cp1Id is "serverGroupId":
         cp1Comp = cp1.get('serverGroupId')
      else:
         # cp1Comp = cp1.get('<Undefined>')	# ToDo: Complete Code Here
	 pass

      if cp2Id is "serverGroupId":
         cp2Comp = cp2.get('serverGroupId')
      else:
         # cp2Comp = cp2.get('<Undefined>')	# ToDo: Complete Code Here
	 pass

      cmd = {
         "cmd":"$AppProfile.addCoipLan",
	 "args":{
	    "appProfileId": self._cfg['appProfileId'],
	    "coipLanName": self._cfg['coipLanName'],
	    "components":{
	       "from": cp1Comp,
	       "to":   cp2Comp
	    },
	    "protocol": self._cfg['protocol']
	 }
      }

      info = self.makeZapyRequest(json.dumps(cmd))

      # print "--------->"
      # print info
      # print "--------->"

      if 'Ok' in info['status']:
         self._cfg['coipLanId'] = info['data']['coipLanId']

      return info
